Version 4.0 HI-TECH Software Intermediate Code
"1381 C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18Fxxxx_DFP/1.3.36/xc8\pic\include\proc\pic18f4620.h
[v _TRISA `Vuc ~T0 @X0 0 e@3986 ]
"1603
[v _TRISB `Vuc ~T0 @X0 0 e@3987 ]
"1825
[v _TRISC `Vuc ~T0 @X0 0 e@3988 ]
"2047
[v _TRISD `Vuc ~T0 @X0 0 e@3989 ]
"2269
[v _TRISE `Vuc ~T0 @X0 0 e@3990 ]
"881
[v _LATA `Vuc ~T0 @X0 0 e@3977 ]
"993
[v _LATB `Vuc ~T0 @X0 0 e@3978 ]
"1105
[v _LATC `Vuc ~T0 @X0 0 e@3979 ]
"1217
[v _LATD `Vuc ~T0 @X0 0 e@3980 ]
"1329
[v _LATE `Vuc ~T0 @X0 0 e@3981 ]
"53
[v _PORTA `Vuc ~T0 @X0 0 e@3968 ]
"190
[v _PORTB `Vuc ~T0 @X0 0 e@3969 ]
"361
[v _PORTC `Vuc ~T0 @X0 0 e@3970 ]
"536
[v _PORTD `Vuc ~T0 @X0 0 e@3971 ]
"678
[v _PORTE `Vuc ~T0 @X0 0 e@3972 ]
"60 mca_layerl/GPIO/hal_gpio.h
[; ;mca_layerl/GPIO/hal_gpio.h: 60: typedef struct {
[s S272 :3 `uc 1 :3 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S272 . port pin direction logic ]
"26 mca_layerl/GPIO/hal_gpio.c
[; ;mca_layerl/GPIO/hal_gpio.c: 26:     }
[c E2799 0 1 .. ]
[n E2799 . output input  ]
"59
[; ;mca_layerl/GPIO/hal_gpio.c: 59: STD_ReturnType gpio_pin_write_logic(const pin_config_t *_pin_config,logic_t logic){
[c E2795 0 1 .. ]
[n E2795 . low high  ]
"139
[; ;mca_layerl/GPIO/hal_gpio.c: 139: STD_ReturnType gpio_port_direction_intialize(port_index_t port,uint8 direction){
[c E2813 0 1 2 3 4 .. ]
[n E2813 . PORTA_INDEX PORTB_INDEX PORTC_INDEX PORTD_INDEX PORTE_INDEX  ]
"55 C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18Fxxxx_DFP/1.3.36/xc8\pic\include\proc\pic18f4620.h
[; <" PORTA equ 0F80h ;# ">
"192
[; <" PORTB equ 0F81h ;# ">
"363
[; <" PORTC equ 0F82h ;# ">
"538
[; <" PORTD equ 0F83h ;# ">
"680
[; <" PORTE equ 0F84h ;# ">
"883
[; <" LATA equ 0F89h ;# ">
"995
[; <" LATB equ 0F8Ah ;# ">
"1107
[; <" LATC equ 0F8Bh ;# ">
"1219
[; <" LATD equ 0F8Ch ;# ">
"1331
[; <" LATE equ 0F8Dh ;# ">
"1383
[; <" TRISA equ 0F92h ;# ">
"1388
[; <" DDRA equ 0F92h ;# ">
"1605
[; <" TRISB equ 0F93h ;# ">
"1610
[; <" DDRB equ 0F93h ;# ">
"1827
[; <" TRISC equ 0F94h ;# ">
"1832
[; <" DDRC equ 0F94h ;# ">
"2049
[; <" TRISD equ 0F95h ;# ">
"2054
[; <" DDRD equ 0F95h ;# ">
"2271
[; <" TRISE equ 0F96h ;# ">
"2276
[; <" DDRE equ 0F96h ;# ">
"2435
[; <" OSCTUNE equ 0F9Bh ;# ">
"2500
[; <" PIE1 equ 0F9Dh ;# ">
"2577
[; <" PIR1 equ 0F9Eh ;# ">
"2654
[; <" IPR1 equ 0F9Fh ;# ">
"2731
[; <" PIE2 equ 0FA0h ;# ">
"2797
[; <" PIR2 equ 0FA1h ;# ">
"2863
[; <" IPR2 equ 0FA2h ;# ">
"2929
[; <" EECON1 equ 0FA6h ;# ">
"2995
[; <" EECON2 equ 0FA7h ;# ">
"3002
[; <" EEDATA equ 0FA8h ;# ">
"3009
[; <" EEADR equ 0FA9h ;# ">
"3016
[; <" EEADRH equ 0FAAh ;# ">
"3023
[; <" RCSTA equ 0FABh ;# ">
"3028
[; <" RCSTA1 equ 0FABh ;# ">
"3233
[; <" TXSTA equ 0FACh ;# ">
"3238
[; <" TXSTA1 equ 0FACh ;# ">
"3489
[; <" TXREG equ 0FADh ;# ">
"3494
[; <" TXREG1 equ 0FADh ;# ">
"3501
[; <" RCREG equ 0FAEh ;# ">
"3506
[; <" RCREG1 equ 0FAEh ;# ">
"3513
[; <" SPBRG equ 0FAFh ;# ">
"3518
[; <" SPBRG1 equ 0FAFh ;# ">
"3525
[; <" SPBRGH equ 0FB0h ;# ">
"3532
[; <" T3CON equ 0FB1h ;# ">
"3644
[; <" TMR3 equ 0FB2h ;# ">
"3651
[; <" TMR3L equ 0FB2h ;# ">
"3658
[; <" TMR3H equ 0FB3h ;# ">
"3665
[; <" CMCON equ 0FB4h ;# ">
"3755
[; <" CVRCON equ 0FB5h ;# ">
"3834
[; <" ECCP1AS equ 0FB6h ;# ">
"3916
[; <" PWM1CON equ 0FB7h ;# ">
"3986
[; <" BAUDCON equ 0FB8h ;# ">
"3991
[; <" BAUDCTL equ 0FB8h ;# ">
"4158
[; <" CCP2CON equ 0FBAh ;# ">
"4237
[; <" CCPR2 equ 0FBBh ;# ">
"4244
[; <" CCPR2L equ 0FBBh ;# ">
"4251
[; <" CCPR2H equ 0FBCh ;# ">
"4258
[; <" CCP1CON equ 0FBDh ;# ">
"4355
[; <" CCPR1 equ 0FBEh ;# ">
"4362
[; <" CCPR1L equ 0FBEh ;# ">
"4369
[; <" CCPR1H equ 0FBFh ;# ">
"4376
[; <" ADCON2 equ 0FC0h ;# ">
"4447
[; <" ADCON1 equ 0FC1h ;# ">
"4532
[; <" ADCON0 equ 0FC2h ;# ">
"4651
[; <" ADRES equ 0FC3h ;# ">
"4658
[; <" ADRESL equ 0FC3h ;# ">
"4665
[; <" ADRESH equ 0FC4h ;# ">
"4672
[; <" SSPCON2 equ 0FC5h ;# ">
"4734
[; <" SSPCON1 equ 0FC6h ;# ">
"4804
[; <" SSPSTAT equ 0FC7h ;# ">
"5025
[; <" SSPADD equ 0FC8h ;# ">
"5032
[; <" SSPBUF equ 0FC9h ;# ">
"5039
[; <" T2CON equ 0FCAh ;# ">
"5110
[; <" PR2 equ 0FCBh ;# ">
"5115
[; <" MEMCON equ 0FCBh ;# ">
"5220
[; <" TMR2 equ 0FCCh ;# ">
"5227
[; <" T1CON equ 0FCDh ;# ">
"5330
[; <" TMR1 equ 0FCEh ;# ">
"5337
[; <" TMR1L equ 0FCEh ;# ">
"5344
[; <" TMR1H equ 0FCFh ;# ">
"5351
[; <" RCON equ 0FD0h ;# ">
"5484
[; <" WDTCON equ 0FD1h ;# ">
"5512
[; <" HLVDCON equ 0FD2h ;# ">
"5517
[; <" LVDCON equ 0FD2h ;# ">
"5782
[; <" OSCCON equ 0FD3h ;# ">
"5859
[; <" T0CON equ 0FD5h ;# ">
"5936
[; <" TMR0 equ 0FD6h ;# ">
"5943
[; <" TMR0L equ 0FD6h ;# ">
"5950
[; <" TMR0H equ 0FD7h ;# ">
"5957
[; <" STATUS equ 0FD8h ;# ">
"6028
[; <" FSR2 equ 0FD9h ;# ">
"6035
[; <" FSR2L equ 0FD9h ;# ">
"6042
[; <" FSR2H equ 0FDAh ;# ">
"6049
[; <" PLUSW2 equ 0FDBh ;# ">
"6056
[; <" PREINC2 equ 0FDCh ;# ">
"6063
[; <" POSTDEC2 equ 0FDDh ;# ">
"6070
[; <" POSTINC2 equ 0FDEh ;# ">
"6077
[; <" INDF2 equ 0FDFh ;# ">
"6084
[; <" BSR equ 0FE0h ;# ">
"6091
[; <" FSR1 equ 0FE1h ;# ">
"6098
[; <" FSR1L equ 0FE1h ;# ">
"6105
[; <" FSR1H equ 0FE2h ;# ">
"6112
[; <" PLUSW1 equ 0FE3h ;# ">
"6119
[; <" PREINC1 equ 0FE4h ;# ">
"6126
[; <" POSTDEC1 equ 0FE5h ;# ">
"6133
[; <" POSTINC1 equ 0FE6h ;# ">
"6140
[; <" INDF1 equ 0FE7h ;# ">
"6147
[; <" WREG equ 0FE8h ;# ">
"6159
[; <" FSR0 equ 0FE9h ;# ">
"6166
[; <" FSR0L equ 0FE9h ;# ">
"6173
[; <" FSR0H equ 0FEAh ;# ">
"6180
[; <" PLUSW0 equ 0FEBh ;# ">
"6187
[; <" PREINC0 equ 0FECh ;# ">
"6194
[; <" POSTDEC0 equ 0FEDh ;# ">
"6201
[; <" POSTINC0 equ 0FEEh ;# ">
"6208
[; <" INDF0 equ 0FEFh ;# ">
"6215
[; <" INTCON3 equ 0FF0h ;# ">
"6307
[; <" INTCON2 equ 0FF1h ;# ">
"6377
[; <" INTCON equ 0FF2h ;# ">
"6494
[; <" PROD equ 0FF3h ;# ">
"6501
[; <" PRODL equ 0FF3h ;# ">
"6508
[; <" PRODH equ 0FF4h ;# ">
"6515
[; <" TABLAT equ 0FF5h ;# ">
"6524
[; <" TBLPTR equ 0FF6h ;# ">
"6531
[; <" TBLPTRL equ 0FF6h ;# ">
"6538
[; <" TBLPTRH equ 0FF7h ;# ">
"6545
[; <" TBLPTRU equ 0FF8h ;# ">
"6554
[; <" PCLAT equ 0FF9h ;# ">
"6561
[; <" PC equ 0FF9h ;# ">
"6568
[; <" PCL equ 0FF9h ;# ">
"6575
[; <" PCLATH equ 0FFAh ;# ">
"6582
[; <" PCLATU equ 0FFBh ;# ">
"6589
[; <" STKPTR equ 0FFCh ;# ">
"6695
[; <" TOS equ 0FFDh ;# ">
"6702
[; <" TOSL equ 0FFDh ;# ">
"6709
[; <" TOSH equ 0FFEh ;# ">
"6716
[; <" TOSU equ 0FFFh ;# ">
"26 mca_layerl/GPIO/../device_config.h
[p x OSC  =  HS          ]
"27
[p x FCMEN  =  OFF       ]
"28
[p x IESO  =  OFF        ]
"31
[p x PWRT  =  OFF        ]
"32
[p x BOREN  =  OFF       ]
"33
[p x BORV  =  1          ]
"36
[p x WDT  =  OFF         ]
"37
[p x WDTPS  =  32768     ]
"40
[p x CCP2MX  =  PORTC    ]
"41
[p x PBADEN  =  OFF      ]
"42
[p x LPT1OSC  =  OFF     ]
"43
[p x MCLRE  =  ON        ]
"46
[p x STVREN  =  ON       ]
"47
[p x LVP  =  OFF         ]
"48
[p x XINST  =  OFF       ]
"51
[p x CP0  =  OFF         ]
"52
[p x CP1  =  OFF         ]
"53
[p x CP2  =  OFF         ]
"54
[p x CP3  =  OFF         ]
"57
[p x CPB  =  OFF         ]
"58
[p x CPD  =  OFF         ]
"61
[p x WRT0  =  OFF        ]
"62
[p x WRT1  =  OFF        ]
"63
[p x WRT2  =  OFF        ]
"64
[p x WRT3  =  OFF        ]
"67
[p x WRTC  =  OFF        ]
"68
[p x WRTB  =  OFF        ]
"69
[p x WRTD  =  OFF        ]
"72
[p x EBTR0  =  OFF       ]
"73
[p x EBTR1  =  OFF       ]
"74
[p x EBTR2  =  OFF       ]
"75
[p x EBTR3  =  OFF       ]
"78
[p x EBTRB  =  OFF       ]
"3 mca_layerl/GPIO/hal_gpio.c
[; ;mca_layerl/GPIO/hal_gpio.c: 3: volatile uint8 *tris_register[]={&TRISA,&TRISB,&TRISC,&TRISD,&TRISE};
[v _tris_register `*Vuc ~T0 @X0 -> 5 `i e ]
[i _tris_register
:U ..
&U _TRISA
&U _TRISB
&U _TRISC
&U _TRISD
&U _TRISE
..
]
"4
[; ;mca_layerl/GPIO/hal_gpio.c: 4: volatile uint8 *lat_register[]={&LATA,&LATB,&LATC,&LATD,&LATE};
[v _lat_register `*Vuc ~T0 @X0 -> 5 `i e ]
[i _lat_register
:U ..
&U _LATA
&U _LATB
&U _LATC
&U _LATD
&U _LATE
..
]
"5
[; ;mca_layerl/GPIO/hal_gpio.c: 5: volatile uint8 *port_register[]={&PORTA,&PORTB,&PORTC,&PORTD,&PORTE};
[v _port_register `*Vuc ~T0 @X0 -> 5 `i e ]
[i _port_register
:U ..
&U _PORTA
&U _PORTB
&U _PORTC
&U _PORTD
&U _PORTE
..
]
"12
[; ;mca_layerl/GPIO/hal_gpio.c: 12: STD_ReturnType gpio_pin_direction_intialize(const pin_config_t *_pin_config){
[v _gpio_pin_direction_intialize `(uc ~T0 @X0 1 ef1`*CS272 ]
{
[e :U _gpio_pin_direction_intialize ]
[v __pin_config `*CS272 ~T0 @X0 1 r1 ]
[f ]
"13
[; ;mca_layerl/GPIO/hal_gpio.c: 13:     STD_ReturnType ret= (STD_ReturnType)0x01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"14
[; ;mca_layerl/GPIO/hal_gpio.c: 14:     if(((void*)0) == _pin_config){
[e $ ! == -> -> -> 0 `i `*v `*CS272 __pin_config 274  ]
{
"15
[; ;mca_layerl/GPIO/hal_gpio.c: 15:         ret = (STD_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"16
[; ;mca_layerl/GPIO/hal_gpio.c: 16:     }
}
[e $U 275  ]
"17
[; ;mca_layerl/GPIO/hal_gpio.c: 17:     else{
[e :U 274 ]
{
"18
[; ;mca_layerl/GPIO/hal_gpio.c: 18:         switch(_pin_config->direction){
[e $U 277  ]
{
"19
[; ;mca_layerl/GPIO/hal_gpio.c: 19:             case output :
[e :U 278 ]
"20
[; ;mca_layerl/GPIO/hal_gpio.c: 20:                 (*tris_register[_pin_config->port] &= ~((uint8)1 << _pin_config->pin));
[e =& *U *U + &U _tris_register * -> . *U __pin_config 0 `ux -> -> # *U &U _tris_register `ui `ux -> ~ << -> -> -> 1 `i `uc `i -> . *U __pin_config 1 `i `uc ]
"21
[; ;mca_layerl/GPIO/hal_gpio.c: 21:                 break;
[e $U 276  ]
"22
[; ;mca_layerl/GPIO/hal_gpio.c: 22:             case input :
[e :U 279 ]
"23
[; ;mca_layerl/GPIO/hal_gpio.c: 23:                 (*tris_register[_pin_config->port] |= ((uint8)1 << _pin_config->pin));
[e =| *U *U + &U _tris_register * -> . *U __pin_config 0 `ux -> -> # *U &U _tris_register `ui `ux -> << -> -> -> 1 `i `uc `i -> . *U __pin_config 1 `i `uc ]
"24
[; ;mca_layerl/GPIO/hal_gpio.c: 24:                 break;
[e $U 276  ]
"25
[; ;mca_layerl/GPIO/hal_gpio.c: 25:             default : ret =(STD_ReturnType)0x00 ;
[e :U 280 ]
[e = _ret -> -> 0 `i `uc ]
"26
[; ;mca_layerl/GPIO/hal_gpio.c: 26:     }
}
[e $U 276  ]
[e :U 277 ]
[e [\ -> . *U __pin_config 2 `i , $ . `E2799 0 278
 , $ . `E2799 1 279
 280 ]
[e :U 276 ]
"27
[; ;mca_layerl/GPIO/hal_gpio.c: 27:     }
}
[e :U 275 ]
"29
[; ;mca_layerl/GPIO/hal_gpio.c: 29:     return ret;
[e ) _ret ]
[e $UE 273  ]
"30
[; ;mca_layerl/GPIO/hal_gpio.c: 30: }
[e :UE 273 ]
}
"39
[; ;mca_layerl/GPIO/hal_gpio.c: 39: STD_ReturnType gpio_pin_get_direction_status(const pin_config_t *_pin_config,direction_t *direction_status){
[v _gpio_pin_get_direction_status `(uc ~T0 @X0 1 ef2`*CS272`*E2799 ]
{
[e :U _gpio_pin_get_direction_status ]
[v __pin_config `*CS272 ~T0 @X0 1 r1 ]
[v _direction_status `*E2799 ~T0 @X0 1 r2 ]
[f ]
"40
[; ;mca_layerl/GPIO/hal_gpio.c: 40:     STD_ReturnType ret= (STD_ReturnType)0x01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"41
[; ;mca_layerl/GPIO/hal_gpio.c: 41:     if(((void*)0)== _pin_config || ((void*)0) == direction_status || _pin_config->pin >8 -1){
[e $ ! || || == -> -> -> 0 `i `*v `*CS272 __pin_config == -> -> -> 0 `i `*v `*E2799 _direction_status > -> . *U __pin_config 1 `i - -> 8 `i -> 1 `i 282  ]
{
"42
[; ;mca_layerl/GPIO/hal_gpio.c: 42:         ret =(STD_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"43
[; ;mca_layerl/GPIO/hal_gpio.c: 43:     }
}
[e $U 283  ]
"44
[; ;mca_layerl/GPIO/hal_gpio.c: 44:     else
[e :U 282 ]
"45
[; ;mca_layerl/GPIO/hal_gpio.c: 45:     {
{
"46
[; ;mca_layerl/GPIO/hal_gpio.c: 46:         *direction_status =(*tris_register[_pin_config->port] >> _pin_config->pin & (uint8)1);
[e = *U _direction_status -> & >> -> *U *U + &U _tris_register * -> . *U __pin_config 0 `ux -> -> # *U &U _tris_register `ui `ux `i -> . *U __pin_config 1 `i -> -> -> 1 `i `uc `i `E2799 ]
"47
[; ;mca_layerl/GPIO/hal_gpio.c: 47:     }
}
[e :U 283 ]
"48
[; ;mca_layerl/GPIO/hal_gpio.c: 48:     return ret;
[e ) _ret ]
[e $UE 281  ]
"49
[; ;mca_layerl/GPIO/hal_gpio.c: 49: }
[e :UE 281 ]
}
"59
[; ;mca_layerl/GPIO/hal_gpio.c: 59: STD_ReturnType gpio_pin_write_logic(const pin_config_t *_pin_config,logic_t logic){
[v _gpio_pin_write_logic `(uc ~T0 @X0 1 ef2`*CS272`E2795 ]
{
[e :U _gpio_pin_write_logic ]
[v __pin_config `*CS272 ~T0 @X0 1 r1 ]
[v _logic `E2795 ~T0 @X0 1 r2 ]
[f ]
"60
[; ;mca_layerl/GPIO/hal_gpio.c: 60:  STD_ReturnType ret= (STD_ReturnType)0x01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"61
[; ;mca_layerl/GPIO/hal_gpio.c: 61:     if( ((void*)0) == _pin_config ){
[e $ ! == -> -> -> 0 `i `*v `*CS272 __pin_config 285  ]
{
"62
[; ;mca_layerl/GPIO/hal_gpio.c: 62:         ret = (STD_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"63
[; ;mca_layerl/GPIO/hal_gpio.c: 63:     }
}
[e $U 286  ]
"64
[; ;mca_layerl/GPIO/hal_gpio.c: 64:     else{
[e :U 285 ]
{
"65
[; ;mca_layerl/GPIO/hal_gpio.c: 65:             switch(logic){
[e $U 288  ]
{
"66
[; ;mca_layerl/GPIO/hal_gpio.c: 66:                 case low:
[e :U 289 ]
"67
[; ;mca_layerl/GPIO/hal_gpio.c: 67:                     (*lat_register[_pin_config->port] &= ~((uint8)1 << _pin_config->pin));
[e =& *U *U + &U _lat_register * -> . *U __pin_config 0 `ux -> -> # *U &U _lat_register `ui `ux -> ~ << -> -> -> 1 `i `uc `i -> . *U __pin_config 1 `i `uc ]
"69
[; ;mca_layerl/GPIO/hal_gpio.c: 69:                     break;
[e $U 287  ]
"70
[; ;mca_layerl/GPIO/hal_gpio.c: 70:                 case high:
[e :U 290 ]
"71
[; ;mca_layerl/GPIO/hal_gpio.c: 71:                     (*lat_register[_pin_config->port] |= ((uint8)1 << _pin_config->pin));
[e =| *U *U + &U _lat_register * -> . *U __pin_config 0 `ux -> -> # *U &U _lat_register `ui `ux -> << -> -> -> 1 `i `uc `i -> . *U __pin_config 1 `i `uc ]
"73
[; ;mca_layerl/GPIO/hal_gpio.c: 73:                     break;
[e $U 287  ]
"74
[; ;mca_layerl/GPIO/hal_gpio.c: 74:                 default : ret = (STD_ReturnType)0x00;
[e :U 291 ]
[e = _ret -> -> 0 `i `uc ]
"75
[; ;mca_layerl/GPIO/hal_gpio.c: 75:             }
}
[e $U 287  ]
[e :U 288 ]
[e [\ -> _logic `ui , $ -> . `E2795 0 `ui 289
 , $ -> . `E2795 1 `ui 290
 291 ]
[e :U 287 ]
"77
[; ;mca_layerl/GPIO/hal_gpio.c: 77:     }
}
[e :U 286 ]
"78
[; ;mca_layerl/GPIO/hal_gpio.c: 78:         return ret;
[e ) _ret ]
[e $UE 284  ]
"80
[; ;mca_layerl/GPIO/hal_gpio.c: 80: }
[e :UE 284 ]
}
"91
[; ;mca_layerl/GPIO/hal_gpio.c: 91: STD_ReturnType gpio_pin_read_logic(const pin_config_t *_pin_config,logic_t *logic){
[v _gpio_pin_read_logic `(uc ~T0 @X0 1 ef2`*CS272`*E2795 ]
{
[e :U _gpio_pin_read_logic ]
[v __pin_config `*CS272 ~T0 @X0 1 r1 ]
[v _logic `*E2795 ~T0 @X0 1 r2 ]
[f ]
"92
[; ;mca_layerl/GPIO/hal_gpio.c: 92:     STD_ReturnType ret= (STD_ReturnType)0x01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"93
[; ;mca_layerl/GPIO/hal_gpio.c: 93:         if( ( ((void*)0) == _pin_config ) || (((void*)0)== logic )){
[e $ ! || == -> -> -> 0 `i `*v `*CS272 __pin_config == -> -> -> 0 `i `*v `*E2795 _logic 293  ]
{
"94
[; ;mca_layerl/GPIO/hal_gpio.c: 94:         ret = (STD_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"95
[; ;mca_layerl/GPIO/hal_gpio.c: 95:     }
}
[e $U 294  ]
"96
[; ;mca_layerl/GPIO/hal_gpio.c: 96:     else{
[e :U 293 ]
{
"97
[; ;mca_layerl/GPIO/hal_gpio.c: 97:         *logic =(*port_register[_pin_config->port] >> _pin_config->pin & (uint8)1);
[e = *U _logic -> & >> -> *U *U + &U _port_register * -> . *U __pin_config 0 `ux -> -> # *U &U _port_register `ui `ux `i -> . *U __pin_config 1 `i -> -> -> 1 `i `uc `i `E2795 ]
"99
[; ;mca_layerl/GPIO/hal_gpio.c: 99:     }
}
[e :U 294 ]
"100
[; ;mca_layerl/GPIO/hal_gpio.c: 100:         return ret;
[e ) _ret ]
[e $UE 292  ]
"102
[; ;mca_layerl/GPIO/hal_gpio.c: 102: }
[e :UE 292 ]
}
"110
[; ;mca_layerl/GPIO/hal_gpio.c: 110: STD_ReturnType gpio_pin_toggle_logic(const pin_config_t *_pin_config){
[v _gpio_pin_toggle_logic `(uc ~T0 @X0 1 ef1`*CS272 ]
{
[e :U _gpio_pin_toggle_logic ]
[v __pin_config `*CS272 ~T0 @X0 1 r1 ]
[f ]
"111
[; ;mca_layerl/GPIO/hal_gpio.c: 111:     STD_ReturnType ret= (STD_ReturnType)0x01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"112
[; ;mca_layerl/GPIO/hal_gpio.c: 112:         if(((void*)0) == _pin_config){
[e $ ! == -> -> -> 0 `i `*v `*CS272 __pin_config 296  ]
{
"113
[; ;mca_layerl/GPIO/hal_gpio.c: 113:         ret = (STD_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"114
[; ;mca_layerl/GPIO/hal_gpio.c: 114:     }
}
[e $U 297  ]
"115
[; ;mca_layerl/GPIO/hal_gpio.c: 115:     else{
[e :U 296 ]
{
"116
[; ;mca_layerl/GPIO/hal_gpio.c: 116:      (*lat_register[_pin_config->port] ^= ((uint8)1 << _pin_config->pin));
[e =^ *U *U + &U _lat_register * -> . *U __pin_config 0 `ux -> -> # *U &U _lat_register `ui `ux -> << -> -> -> 1 `i `uc `i -> . *U __pin_config 1 `i `uc ]
"117
[; ;mca_layerl/GPIO/hal_gpio.c: 117:     }
}
[e :U 297 ]
"118
[; ;mca_layerl/GPIO/hal_gpio.c: 118:         return ret;
[e ) _ret ]
[e $UE 295  ]
"120
[; ;mca_layerl/GPIO/hal_gpio.c: 120: }
[e :UE 295 ]
}
"124
[; ;mca_layerl/GPIO/hal_gpio.c: 124: STD_ReturnType gpio_pin_intialize(const pin_config_t *_pin_config){
[v _gpio_pin_intialize `(uc ~T0 @X0 1 ef1`*CS272 ]
{
[e :U _gpio_pin_intialize ]
[v __pin_config `*CS272 ~T0 @X0 1 r1 ]
[f ]
"125
[; ;mca_layerl/GPIO/hal_gpio.c: 125:         STD_ReturnType ret= (STD_ReturnType)0x01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"126
[; ;mca_layerl/GPIO/hal_gpio.c: 126:         if(((void*)0) == _pin_config || _pin_config->pin > 8 -1){
[e $ ! || == -> -> -> 0 `i `*v `*CS272 __pin_config > -> . *U __pin_config 1 `i - -> 8 `i -> 1 `i 299  ]
{
"127
[; ;mca_layerl/GPIO/hal_gpio.c: 127:         ret = (STD_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"128
[; ;mca_layerl/GPIO/hal_gpio.c: 128:         }
}
[e $U 300  ]
"129
[; ;mca_layerl/GPIO/hal_gpio.c: 129:         else{
[e :U 299 ]
{
"130
[; ;mca_layerl/GPIO/hal_gpio.c: 130:             ret = gpio_pin_direction_intialize(_pin_config);
[e = _ret ( _gpio_pin_direction_intialize (1 __pin_config ]
"131
[; ;mca_layerl/GPIO/hal_gpio.c: 131:             ret = gpio_pin_write_logic(_pin_config, _pin_config->logic);
[e = _ret ( _gpio_pin_write_logic (2 , __pin_config -> . *U __pin_config 3 `E2795 ]
"132
[; ;mca_layerl/GPIO/hal_gpio.c: 132:         }
}
[e :U 300 ]
"133
[; ;mca_layerl/GPIO/hal_gpio.c: 133:         return ret;
[e ) _ret ]
[e $UE 298  ]
"135
[; ;mca_layerl/GPIO/hal_gpio.c: 135: }
[e :UE 298 ]
}
"139
[; ;mca_layerl/GPIO/hal_gpio.c: 139: STD_ReturnType gpio_port_direction_intialize(port_index_t port,uint8 direction){
[v _gpio_port_direction_intialize `(uc ~T0 @X0 1 ef2`E2813`uc ]
{
[e :U _gpio_port_direction_intialize ]
[v _port `E2813 ~T0 @X0 1 r1 ]
[v _direction `uc ~T0 @X0 1 r2 ]
[f ]
"140
[; ;mca_layerl/GPIO/hal_gpio.c: 140:     STD_ReturnType ret= (STD_ReturnType)0x01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"141
[; ;mca_layerl/GPIO/hal_gpio.c: 141:     if(port > 5 -1){
[e $ ! > -> _port `ui -> - -> 5 `i -> 1 `i `ui 302  ]
{
"142
[; ;mca_layerl/GPIO/hal_gpio.c: 142:         ret = (STD_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"143
[; ;mca_layerl/GPIO/hal_gpio.c: 143:     }
}
[e $U 303  ]
"144
[; ;mca_layerl/GPIO/hal_gpio.c: 144:     else
[e :U 302 ]
"145
[; ;mca_layerl/GPIO/hal_gpio.c: 145:     {
{
"146
[; ;mca_layerl/GPIO/hal_gpio.c: 146:         *tris_register[port] = direction;
[e = *U *U + &U _tris_register * -> _port `ux -> -> # *U &U _tris_register `ui `ux _direction ]
"147
[; ;mca_layerl/GPIO/hal_gpio.c: 147:     }
}
[e :U 303 ]
"149
[; ;mca_layerl/GPIO/hal_gpio.c: 149:     return ret;
[e ) _ret ]
[e $UE 301  ]
"150
[; ;mca_layerl/GPIO/hal_gpio.c: 150: }
[e :UE 301 ]
}
"159
[; ;mca_layerl/GPIO/hal_gpio.c: 159: STD_ReturnType gpio_port_get_direction_status(port_index_t port,uint8 *direction_status){
[v _gpio_port_get_direction_status `(uc ~T0 @X0 1 ef2`E2813`*uc ]
{
[e :U _gpio_port_get_direction_status ]
[v _port `E2813 ~T0 @X0 1 r1 ]
[v _direction_status `*uc ~T0 @X0 1 r2 ]
[f ]
"160
[; ;mca_layerl/GPIO/hal_gpio.c: 160:     STD_ReturnType ret= (STD_ReturnType)0x01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"161
[; ;mca_layerl/GPIO/hal_gpio.c: 161:         if((((void*)0)== direction_status )){
[e $ ! == -> -> -> 0 `i `*v `*uc _direction_status 305  ]
{
"162
[; ;mca_layerl/GPIO/hal_gpio.c: 162:         ret = (STD_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"163
[; ;mca_layerl/GPIO/hal_gpio.c: 163:     }
}
[e $U 306  ]
"164
[; ;mca_layerl/GPIO/hal_gpio.c: 164:     else{
[e :U 305 ]
{
"165
[; ;mca_layerl/GPIO/hal_gpio.c: 165:             ret = *tris_register[port];
[e = _ret *U *U + &U _tris_register * -> _port `ux -> -> # *U &U _tris_register `ui `ux ]
"166
[; ;mca_layerl/GPIO/hal_gpio.c: 166:     }
}
[e :U 306 ]
"167
[; ;mca_layerl/GPIO/hal_gpio.c: 167:         return ret;
[e ) _ret ]
[e $UE 304  ]
"169
[; ;mca_layerl/GPIO/hal_gpio.c: 169: }
[e :UE 304 ]
}
"174
[; ;mca_layerl/GPIO/hal_gpio.c: 174: STD_ReturnType gpio_port_write_logic(port_index_t port,uint8 logic){
[v _gpio_port_write_logic `(uc ~T0 @X0 1 ef2`E2813`uc ]
{
[e :U _gpio_port_write_logic ]
[v _port `E2813 ~T0 @X0 1 r1 ]
[v _logic `uc ~T0 @X0 1 r2 ]
[f ]
"175
[; ;mca_layerl/GPIO/hal_gpio.c: 175:     STD_ReturnType ret= (STD_ReturnType)0x01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"176
[; ;mca_layerl/GPIO/hal_gpio.c: 176:     if(port >5 -1){
[e $ ! > -> _port `ui -> - -> 5 `i -> 1 `i `ui 308  ]
{
"177
[; ;mca_layerl/GPIO/hal_gpio.c: 177:         ret =(STD_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"178
[; ;mca_layerl/GPIO/hal_gpio.c: 178:     }
}
[e $U 309  ]
"179
[; ;mca_layerl/GPIO/hal_gpio.c: 179:     else{
[e :U 308 ]
{
"180
[; ;mca_layerl/GPIO/hal_gpio.c: 180:         *lat_register[port]=logic;
[e = *U *U + &U _lat_register * -> _port `ux -> -> # *U &U _lat_register `ui `ux _logic ]
"181
[; ;mca_layerl/GPIO/hal_gpio.c: 181:     }
}
[e :U 309 ]
"182
[; ;mca_layerl/GPIO/hal_gpio.c: 182:     return ret;
[e ) _ret ]
[e $UE 307  ]
"183
[; ;mca_layerl/GPIO/hal_gpio.c: 183: }
[e :UE 307 ]
}
"190
[; ;mca_layerl/GPIO/hal_gpio.c: 190: STD_ReturnType gpio_port_read_logic(port_index_t port,uint8 *logic){
[v _gpio_port_read_logic `(uc ~T0 @X0 1 ef2`E2813`*uc ]
{
[e :U _gpio_port_read_logic ]
[v _port `E2813 ~T0 @X0 1 r1 ]
[v _logic `*uc ~T0 @X0 1 r2 ]
[f ]
"191
[; ;mca_layerl/GPIO/hal_gpio.c: 191:     STD_ReturnType ret= (STD_ReturnType)0x01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"192
[; ;mca_layerl/GPIO/hal_gpio.c: 192:     if((((void*)0)==logic) && (port >5 -1)){
[e $ ! && == -> -> -> 0 `i `*v `*uc _logic > -> _port `ui -> - -> 5 `i -> 1 `i `ui 311  ]
{
"193
[; ;mca_layerl/GPIO/hal_gpio.c: 193:         ret =(STD_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"194
[; ;mca_layerl/GPIO/hal_gpio.c: 194:     }
}
[e $U 312  ]
"195
[; ;mca_layerl/GPIO/hal_gpio.c: 195:     else{
[e :U 311 ]
{
"196
[; ;mca_layerl/GPIO/hal_gpio.c: 196:         *logic=*lat_register[port];
[e = *U _logic *U *U + &U _lat_register * -> _port `ux -> -> # *U &U _lat_register `ui `ux ]
"197
[; ;mca_layerl/GPIO/hal_gpio.c: 197:     }
}
[e :U 312 ]
"198
[; ;mca_layerl/GPIO/hal_gpio.c: 198:     return ret;
[e ) _ret ]
[e $UE 310  ]
"199
[; ;mca_layerl/GPIO/hal_gpio.c: 199: }
[e :UE 310 ]
}
"204
[; ;mca_layerl/GPIO/hal_gpio.c: 204: STD_ReturnType gpio_port_toggle_logic(port_index_t port){
[v _gpio_port_toggle_logic `(uc ~T0 @X0 1 ef1`E2813 ]
{
[e :U _gpio_port_toggle_logic ]
[v _port `E2813 ~T0 @X0 1 r1 ]
[f ]
"205
[; ;mca_layerl/GPIO/hal_gpio.c: 205:       STD_ReturnType ret= (STD_ReturnType)0x01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"206
[; ;mca_layerl/GPIO/hal_gpio.c: 206:     if(port >5 -1){
[e $ ! > -> _port `ui -> - -> 5 `i -> 1 `i `ui 314  ]
{
"207
[; ;mca_layerl/GPIO/hal_gpio.c: 207:         ret =(STD_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"208
[; ;mca_layerl/GPIO/hal_gpio.c: 208:     }
}
[e $U 315  ]
"209
[; ;mca_layerl/GPIO/hal_gpio.c: 209:     else{
[e :U 314 ]
{
"210
[; ;mca_layerl/GPIO/hal_gpio.c: 210:         *lat_register[port]^=0xff;
[e =^ *U *U + &U _lat_register * -> _port `ux -> -> # *U &U _lat_register `ui `ux -> -> 255 `i `uc ]
"211
[; ;mca_layerl/GPIO/hal_gpio.c: 211:     }
}
[e :U 315 ]
"212
[; ;mca_layerl/GPIO/hal_gpio.c: 212:     return ret;
[e ) _ret ]
[e $UE 313  ]
"213
[; ;mca_layerl/GPIO/hal_gpio.c: 213: }
[e :UE 313 ]
}
